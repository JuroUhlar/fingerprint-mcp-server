openapi: 3.0.0
paths:
  /health:
    get:
      operationId: HealthCheckController_getHealth
      parameters:
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponseDto'
  /api-keys:
    get:
      operationId: ApiKeysController_findAll
      summary: List API keys
      description: >-
        Lists all API keys for the workspace associated with the Management API
        key.
      parameters:
        - name: type
          required: false
          in: query
          description: Filters by API key type.
          schema:
            enum:
              - public
              - secret
              - proxy
            type: string
        - name: status
          required: false
          in: query
          description: Filters by API key status.
          schema:
            enum:
              - enabled
              - disabled
            type: string
        - name: environment
          required: false
          in: query
          description: Filters by environment ID.
          schema:
            type: string
        - name: cursor
          required: false
          in: query
          description: >-
            Cursor token used for pagination. Response will contain items
            appearing after the given cursor.
          schema:
            type: string
        - name: limit
          required: false
          in: query
          description: Sets the maximum number of items contained in a single page.
          schema:
            minimum: 0
            maximum: 101
            default: 10
            type: number
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of API keys matching the given query.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDto'
        '401':
          description: 'Error: Invalid API key.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - api-keys
    post:
      operationId: ApiKeysController_create
      summary: Create API key
      description: >-
        Creates an API key for the workspace associated with the Management API
        key. Maximum number of API keys in defined by your plan limits. If you
        need additional API keys, contact our support team.
      parameters:
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiKeyDtoV1'
      responses:
        '201':
          description: Created API key object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/6301a3aa4e0626352ee7b'
        '400':
          description: 'Error: API key can''t be created due to validation errors.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationApiExceptionDto'
        '401':
          description: 'Error: Invalid API key.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - api-keys
  /api-keys/{id}:
    get:
      operationId: ApiKeysController_findOne
      summary: Get API key
      description: Fetch an API key by ID.
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: API key object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/b6301a3aa4e0626352ee7'
        '401':
          description: 'Error: Invalid API key.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '404':
          description: API key with the given ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - api-keys
    patch:
      operationId: ApiKeysController_update
      summary: Update API key
      description: >-
        Updates a single API key. You can update the keys name, description,
        status, and rate limit. You cannot mutate the actual key itself.
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApiKeyDtoV1'
      responses:
        '200':
          description: Updated API key object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/301a3aa4e0626352ee7b5'
        '400':
          description: 'Error: API key can''t be updated due to validation errors.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationApiExceptionDto'
        '401':
          description: 'Error: Invalid API key.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '404':
          description: 'Error: API key with the given ID was not found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - api-keys
    delete:
      operationId: ApiKeysController_deleteApiKey
      summary: Delete API key
      description: >-
        Deletes an API key with the given ID. Make sure that the key you are
        deleting is not used in production environment. This action is not
        reversible.
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Empty response indicating a successful operation.
        '401':
          description: 'Error: Invalid API key.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '404':
          description: 'Error: API key with the given ID was not found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - api-keys
  /environments:
    get:
      operationId: EnvironmentController_findAll
      summary: List environments
      description: >-
        Lists all environments for the workspace associated with the Management
        API key.
      parameters:
        - name: cursor
          required: false
          in: query
          description: >-
            Cursor token used for pagination. Response will contain items
            appearing after the given cursor.
          schema:
            type: string
        - name: limit
          required: false
          in: query
          description: Sets the maximum number of items contained in a single page.
          schema:
            minimum: 0
            maximum: 101
            default: 10
            type: number
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of environments matching the given query.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResponseDtoV2'
        '401':
          description: 'Error: Invalid API key.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - environments
    post:
      operationId: EnvironmentController_create
      summary: Create an environment
      description: >-
        Creates a new environment for the workspace associated with the
        Management API key. Maximum number of environments in defined by your
        plan limits. If you need additional environments, contact our support
        team.
      parameters:
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentDtoV1'
      responses:
        '201':
          description: Created environment object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentApiResponseDtoV2'
        '400':
          description: 'Error: Environment can''t be created due to validation errors.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationApiExceptionDto'
        '401':
          description: 'Error: Invalid API key.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - environments
  /environments/{id}:
    delete:
      operationId: EnvironmentController_delete
      summary: Delete an environment
      description: >-
        Deletes an environment with the given environment ID. You can only
        delete environments that don't have any active API keys associated with
        it.
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Empty response indicating a successful operation.
        '400':
          description: 'Error: Environment can''t be deleted due to validation errors.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationApiExceptionDto'
        '401':
          description: 'Error: Invalid API key.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '404':
          description: 'Error: Environment with the given ID was not found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - environments
  /filtering-rules:
    get:
      operationId: FilteringRulesController_findAll
      summary: List filtering rules
      description: >-
        Lists all request filtering rules for the workspace associated with the
        Management API key.
      parameters:
        - name: environment
          required: false
          in: query
          description: Filters by environment ID.
          schema:
            type: string
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of filtering rules matching the given query.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/1a3aa4e0626352ee7b5e7'
        '401':
          description: 'Error: Invalid API key.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - filtering-rules
    post:
      operationId: FilteringRulesController_create
      summary: Set filtering rules
      description: >-
        Creates or updates filtering rules for an environment in bulk. This
        action will overwrite any existing filtering rules on specified
        environment. If there is no filtering rules for an environment, this
        action creates them. To completely remove filtering rules, set both
        `allow` and `deny` lists to an empty array (`[]`).

        Currently only supports origin domain filtering.


        Note: It can take up to 5 minutes to start filtering incoming requests
        after setting a rule.
      parameters:
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFilteringRuleDtoV1'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/a3aa4e0626352ee7b5e79'
        '400':
          description: 'Error: Filtering rules can''t be set due to validation errors.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationApiExceptionDto'
        '401':
          description: 'Error: Invalid API key.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - filtering-rules
    patch:
      operationId: FilteringRulesController_update
      summary: Mutate filtering rules
      description: >-
        Allows atomic mutation to filtering rules for an environment. Explicity
        specify which list (`allow` or `deny`) you are mutating and which
        operation (`add` or `remove`) you want to execute with the given list of
        items.

        Currently only supports origin domain filtering.


        **Note**: It can take up to 5 minutes to start filtering incoming
        requests after setting a rule.
      parameters:
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFilteringRuleDtoV1'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/3aa4e0626352ee7b5e796'
        '400':
          description: 'Error: Filtering rules can''t be mutated due to validation errors.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationApiExceptionDto'
        '401':
          description: 'Error: Invalid API key.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - filtering-rules
  /webhooks/{webhookId}/rules:
    get:
      operationId: WebhookRulesController_findAll
      summary: List webhook rules
      description: >-
        Lists all rules for a webhook belonging to the workspace associated with
        the Management API key.
      parameters:
        - name: webhookId
          required: true
          in: path
          schema:
            type: string
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of webhook rules matching the given query.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aa4e0626352ee7b5e796c'
        '401':
          description: 'Error: Invalid API key.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '404':
          description: 'Error: Webhook with the given ID was not found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - webhook-rules
    post:
      operationId: WebhookRulesController_create
      summary: Create webhook rule
      description: >-
        Creates a rule for a webhook belonging to the workspace associated with
        the Management API key.  Maximum number of API keys in defined by your
        plan limits. If you need additional API keys, contact our support team.
      parameters:
        - name: webhookId
          required: true
          in: path
          schema:
            type: string
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRuleDtoV1'
      responses:
        '201':
          description: Created webhook rule object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/a4e0626352ee7b5e796c7'
        '400':
          description: 'Error: Webhook rule can''t be created due to validation errors.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationApiExceptionDto'
        '401':
          description: 'Error: Invalid API key.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '404':
          description: 'Error: Webhook with the given ID was not found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - webhook-rules
  /webhooks/{webhookId}/rules/{id}:
    delete:
      operationId: WebhookRulesController_delete
      summary: Delete webhook rule
      description: >-
        Deletes a webhook rule with the given ID. Make sure that the key you are
        deleting is not used in production environment. This action is not
        reversible.
      parameters:
        - name: webhookId
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Empty response indicating a successful operation.
        '401':
          description: 'Error: Invalid API key.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '404':
          description: 'Error: Webhook or webhook rule with the given ID was not found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - webhook-rules
  /webhooks:
    get:
      operationId: WebhooksController_findAll
      summary: List webhooks
      description: >-
        Lists all webhooks associated to the Management API key, optionally
        filtered by status.
      parameters:
        - name: status
          required: false
          in: query
          description: Filters by webhook status.
          schema:
            enum:
              - enabled
              - disabled
            type: string
        - name: environment
          required: false
          in: query
          description: Filters by webhook environment ID.
          schema:
            type: string
        - name: cursor
          required: false
          in: query
          description: >-
            Cursor token used for pagination. Response will contain items
            appearing after the given cursor.
          schema:
            type: string
        - name: limit
          required: false
          in: query
          description: Sets the maximum number of items contained in a single page.
          schema:
            minimum: 0
            maximum: 101
            default: 10
            type: number
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of webhooks matching the given query.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWebhooksListResponseDto'
        '400':
          description: 'Error: Bad request.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationApiExceptionDto'
        '401':
          description: Unauthorized. API key is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '403':
          description: Forbidden. Insufficient permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '404':
          description: Webhook does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '422':
          description: 'Error: Payload parameters are invalid.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - webhooks
    post:
      operationId: WebhooksController_create
      summary: Create webhook
      description: >-
        Creates a new webhook in the workspace associated with the Management
        API key.

        Webhook needs to be verified before it will start sending identification
        events to your server. See webhook verification.

        If webhook signatures are enabled (enterprise only), signing key will be
        visible in the response after creation. When fetching webhooks after
        creation, signing key will not be visible!

        See webhooks documentation for more details.

        When specifying an environment during creation, webhook should be
        assigned to the given environment. Setting environment to null creates a
        global webhook.
      parameters:
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookDtoV1'
      responses:
        '201':
          description: Webhook created, but needs to be verified before it's active.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        '400':
          description: 'Error: Bad request.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationApiExceptionDto'
        '401':
          description: Unauthorized. API key is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '403':
          description: Forbidden. Insufficient permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '404':
          description: Webhook does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '422':
          description: 'Error: Payload parameters are invalid.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - webhooks
  /webhooks/{id}:
    get:
      operationId: WebhooksController_findOne
      summary: Get webhook by ID
      description: Fetch a specific webhook by ID.
      parameters:
        - name: id
          required: true
          in: path
          description: Webhook ID
          schema:
            type: string
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Webhook object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        '400':
          description: 'Error: Bad request.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationApiExceptionDto'
        '401':
          description: Unauthorized. API key is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '403':
          description: Forbidden. Insufficient permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '404':
          description: Webhook does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '422':
          description: 'Error: Payload parameters are invalid.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - webhooks
    patch:
      operationId: WebhooksController_update
      summary: Update webhook
      description: >-
        Updates the webhook with the given ID. You can update the name,
        description, status, URL, and set basic authentication.

        Changing the URL will require this webhook to be verified again.

        Changing the status will disable/enable sending of identification events
        to your webhook.
      parameters:
        - name: id
          required: true
          in: path
          description: Webhook ID
          schema:
            type: string
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebhookDtoV1'
      responses:
        '200':
          description: Webhook updated. Changes will take effect in a few minutes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        '400':
          description: 'Error: Bad request.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationApiExceptionDto'
        '401':
          description: Unauthorized. API key is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '403':
          description: Forbidden. Insufficient permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '404':
          description: Webhook does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '422':
          description: 'Error: Payload parameters are invalid.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - webhooks
    delete:
      operationId: WebhooksController_remove
      summary: Delete webhook
      description: >-
        Deletes the webhook with the given ID. This action is not reversible.
        Changes will take affect in a few minutes.
      parameters:
        - name: id
          required: true
          in: path
          description: Webhook ID
          schema:
            type: string
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Empty response indicating a successful operation.
        '400':
          description: 'Error: Bad request.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationApiExceptionDto'
        '401':
          description: Unauthorized. API key is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '403':
          description: Forbidden. Insufficient permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '404':
          description: Webhook does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '422':
          description: 'Error: Payload parameters are invalid.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - webhooks
  /webhooks/{id}/verification:
    post:
      operationId: WebhooksController_verify
      summary: Verify webhook
      description: >-
        Send a test event in order to verify your webhook endpoint, it needs to
        respond with HTTP 200 to be verified.

        Webhook needs to be verified before it will receive identification
        events.
      parameters:
        - name: id
          required: true
          in: path
          description: Webhook ID
          schema:
            type: string
        - name: X-API-Version
          in: header
          description: Management API version.
          example: '2024-05-20'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Webhook verification process initiated. Make sure webhook is active
            in order to receive identification events.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
        '400':
          description: Bad request. Webhook is already verified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '401':
          description: Unauthorized. API key is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '403':
          description: Forbidden. Insufficient permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '404':
          description: Webhook does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
        '422':
          description: 'Error: Payload parameters are invalid.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationApiExceptionDto'
        '429':
          description: 'Error: API key has exceeded its rate limit.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExceptionDto'
      tags:
        - webhooks
info:
  title: Management API
  description: >-
    Managment API allows you to manage your Fingerprint account and applications
    programmatically from a server environment.
  version: '2024-05-20'
  contact: {}
tags: []
servers:
  - url: https://management-api.fpjs.io
components:
  securitySchemes:
    Management-API-key:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    HealthCheckResponseDto:
      type: object
      properties: {}
    ApiKeyResponseDtoV1:
      type: object
      properties:
        id:
          type: string
          description: Auto-generated ID for an API key
          example: tok_No3jUysGLCDuqB3RnCVf1weo
        name:
          type: string
          description: API key name
          example: My Public Key
        description:
          type: string
          description: API key description
          example: Description for my public key
        status:
          type: string
          enum:
            - enabled
            - disabled
          description: API key status, indicates if an API keys is enabled or disabled.
          example: enabled
        environment:
          type: string
          description: ID of an environment the API key belongs to.
          example: ae_rrETjdWcfqI6AFsk
        type:
          type: string
          enum:
            - public
            - secret
            - proxy
          description: Type of an API key.
          example: public
        token:
          type: string
          description: >-
            Value of an API key. This field is immutable, and for secret keys
            it's only visible upon creation.
          example: eWDrrpGGLjDQW0LBA0Wj
        rateLimit:
          type: number
          description: Current limit in requests-per-second for the API key.
          example: 5
        createdAt:
          format: date-time
          type: string
          description: Date when API key was created.
          example: '2024-05-31T01:24:39.506Z'
        disabledAt:
          format: date-time
          type: string
          description: Date when API key was disabled.
          example: null
      required:
        - id
        - name
        - status
        - environment
        - type
        - rateLimit
        - createdAt
    PaginationData:
      type: object
      properties:
        nextCursor:
          type: string
          nullable: true
          description: Cursor token to be used to get the next page of results.
          example: eyJrZXlzIjpbImlkIl0sInZhbHVlcyI6WyJhZV9JRVdWQVhrQURyN3BiNFYzI
        prevCursor:
          type: string
          nullable: true
          description: Cursor token used to get the previous page of results.
          example: null
      required:
        - nextCursor
        - prevCursor
    PaginationMetadata:
      type: object
      properties:
        pagination:
          description: Object containing pagination metadata.
          allOf:
            - $ref: '#/components/schemas/PaginationData'
      required:
        - pagination
    PaginatedResponseDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ApiKeyResponseDtoV1'
        metadata:
          $ref: '#/components/schemas/PaginationMetadata'
      required:
        - data
        - metadata
    BaseApiExceptionDto:
      type: object
      properties:
        message:
          type: string
          description: Verbal description of the error.
        code:
          type: string
          description: Error code.
      required:
        - message
        - code
    ApiExceptionDto:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/BaseApiExceptionDto'
      required:
        - error
    b6301a3aa4e0626352ee7:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ApiKeyResponseDtoV1'
      required:
        - data
    CreateApiKeyDtoV1:
      type: object
      properties:
        type:
          type: string
          enum:
            - public
            - secret
            - proxy
          description: Type of an API key.
        name:
          type: string
          description: Name of an API key.
          maxLength: 255
          minLength: 3
        description:
          type: string
          description: Description for an API key.
          maxLength: 255
          minLength: 3
        environment:
          type: string
          description: >-
            Environment in which to create an API key. If omitted, API key will
            be created in the default environment.
      required:
        - type
        - name
    6301a3aa4e0626352ee7b:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ApiKeyResponseDtoV1'
      required:
        - data
    BaseValidationApiExceptionViolationDto:
      type: object
      properties:
        property:
          type: string
          description: Property that has failed validation.
        message:
          type: string
          description: Description of the violation.
      required:
        - property
        - message
    BaseValidationApiExceptionDto:
      type: object
      properties:
        message:
          type: string
          description: Verbal description of the error.
        code:
          type: string
          description: Error code.
        violations:
          description: List of validation violations.
          type: array
          items:
            $ref: '#/components/schemas/BaseValidationApiExceptionViolationDto'
      required:
        - message
        - code
    ValidationApiExceptionDto:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/BaseValidationApiExceptionDto'
      required:
        - error
    UpdateApiKeyDtoV1:
      type: object
      properties:
        name:
          type: string
          description: Name of an API key.
          maxLength: 255
          minLength: 3
        description:
          type: string
          description: Description for an API key.
          maxLength: 255
          minLength: 3
        status:
          type: string
          enum:
            - enabled
            - disabled
          description: Set API key status. Use to enable or disable an API key.
        rate_limit:
          type: number
          description: Set rate limit for an API key. Value is in request-per-second.
          minimum: 0.1
    301a3aa4e0626352ee7b5:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ApiKeyResponseDtoV1'
      required:
        - data
    EnvironmentResponseDtoV1:
      type: object
      properties:
        id:
          type: string
          description: Auto-generated ID for an environment
          example: ae_rrETjdWcfqI6AFsk
        name:
          type: string
          description: Environment name
          example: Default environment
        created_at:
          type: string
          description: Date when environment was created
          example: '2024-05-31T01:24:39.506Z'
      required:
        - id
        - name
        - created_at
    PaginatedResponseDtoV2:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentResponseDtoV1'
        metadata:
          $ref: '#/components/schemas/PaginationMetadata'
      required:
        - data
        - metadata
    CreateEnvironmentDtoV1:
      type: object
      properties:
        name:
          type: string
          description: Name for the new environment
          maxLength: 255
          minLength: 3
      required:
        - name
    EnvironmentApiResponseDtoV2:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EnvironmentResponseDtoV1'
      required:
        - data
    FilteringRulesResponseDtoV1:
      type: object
      properties:
        type:
          type: string
          enum:
            - origin
          description: Type of filtering rule.
          example: origin
        environment:
          type: string
          description: ID of an environment the filtering rule allies to.
          example: ae_rrETjdWcfqI6AFsk
        allow:
          description: >-
            List of origin domains that are allowed to make API requests.
            Wildcard entry (`*`) implies all domains are allowed.
          example:
            - example.com
            - my-website.com
          type: array
          items:
            type: string
        deny:
          description: >-
            List of origin domains that are denied from making API requests.
            Wildcard entry (`*`) implies all domains are denied.
          example:
            - '*'
          type: array
          items:
            type: string
      required:
        - type
        - environment
        - allow
        - deny
    1a3aa4e0626352ee7b5e7:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FilteringRulesResponseDtoV1'
      required:
        - data
    CreateFilteringRuleDtoV1:
      type: object
      properties:
        environment:
          type: string
          description: Environment for which to set filtering rule.
        allow:
          description: >-
            List of origin domains that are allowed to make requests, making all
            other domains denied by default. When setting the allow list, you
            must explicity set the deny list to wildcard value (`['*']`).
          type: array
          items:
            type: string
        deny:
          description: >-
            List of origin domains that are denied to make requests, making all
            other domains allowed by default. When setting the deny list, you
            must explicity set the allow list to wildcard value (`['*']`).
          type: array
          items:
            type: string
      required:
        - environment
        - allow
        - deny
    a3aa4e0626352ee7b5e79:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FilteringRulesResponseDtoV1'
      required:
        - data
    UpdateFilteringRuleDtoV1:
      type: object
      properties:
        environment:
          type: string
          description: ID of an environment for which we are mutating the filtering rules.
        permission:
          type: string
          enum:
            - allow
            - deny
          description: Permission list we want to mutate, either `allow` or `deny`.
        op:
          type: string
          enum:
            - add
            - remove
          description: >-
            Operation we are executing on specified permission list, either
            `add` or `remove`.
        items:
          description: >-
            List of items we are mutating with the given operation on the given
            permission list.
          type: array
          items:
            type: string
      required:
        - environment
        - permission
        - op
        - items
    3aa4e0626352ee7b5e796:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FilteringRulesResponseDtoV1'
      required:
        - data
    WebhookRulesResponseDtoV1:
      type: object
      properties:
        id:
          type: string
          description: Auto-generated ID for a webhook rule
          example: tok_No3jUysGLCDuqB3RnCVf1weo
        name:
          type: string
          description: Webhook rule name
          example: My webhook rule
        description:
          type: string
          description: Webhook rule description
          example: Description for my webhook rule
        rule:
          type: string
          description: Content of the rule
          example: ip == '0.0.0.0'
        createdAt:
          format: date-time
          type: string
          description: Date when webhook rule was created
          example: '2024-05-31T01:24:39.506Z'
      required:
        - id
        - name
        - rule
        - createdAt
    aa4e0626352ee7b5e796c:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/WebhookRulesResponseDtoV1'
      required:
        - data
    CreateWebhookRuleDtoV1:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        rule:
          type: string
      required:
        - name
        - description
        - rule
    a4e0626352ee7b5e796c7:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WebhookRulesResponseDtoV1'
      required:
        - data
    WebhookEntityV1:
      type: object
      properties:
        id:
          type: string
          description: Webhook ID.
          example: wh_HYv9YfsIIUjpvR
        description:
          type: string
          description: Description of the webhook.
          example: My Webhook
        status:
          type: string
          description: 'Status of the webhook: ''enabled'' or ''disabled''.'
          enum:
            - enabled
            - disabled
        verified:
          type: boolean
          description: Indicates if the webhook endpoint has been verified.
          example: false
        environment:
          type: object
          description: Environment ID this webhook is associated with. Null if global.
        url:
          type: string
          description: URL of the webhook endpoint. Must be HTTPS.
          example: https://website.com/webhook
        legacy:
          type: boolean
          description: True if webhook is legacy. See docs for more details
        signing_key:
          type: string
          description: >-
            The signing key for verifying webhook payloads. Only returned on
            webhook creation if signing is enabled (Enterprise).
        basic_auth:
          type: object
          description: Basic authentication credentials.
          nullable: true
        created_at:
          format: date-time
          type: string
          description: Timestamp of when the webhook was created.
        last_enabled_at:
          type: object
          description: Timestamp of when the webhook was last enabled.
          nullable: true
        last_disabled_at:
          type: object
          description: Timestamp of when the webhook was last disabled.
          nullable: true
      required:
        - id
        - description
        - status
        - verified
        - environment
        - url
        - legacy
        - basic_auth
        - created_at
    PaginatedWebhooksListResponseDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/WebhookEntityV1'
        metadata:
          $ref: '#/components/schemas/PaginationMetadata'
      required:
        - data
        - metadata
    CreateWebhookDtoV1:
      type: object
      properties:
        url:
          type: string
          description: URL of the webhook endpoint. Must be HTTPS.
          example: https://website.com/webhook
        description:
          type: string
          description: Description of the webhook.
          example: My Webhook
        status:
          type: string
          description: 'Status of the webhook: ''enabled'' or ''disabled''.'
          enum:
            - enabled
            - disabled
        environment:
          type: object
          description: Environment ID this webhook is associated with. Null if global.
        basic_auth:
          type: object
          description: Basic authentication credentials.
          nullable: true
      required:
        - url
    WebhookResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WebhookEntityV1'
      required:
        - data
    UpdateWebhookDtoV1:
      type: object
      properties:
        url:
          type: string
          description: URL of the webhook endpoint. Must be HTTPS.
          example: https://website.com/webhook
        description:
          type: string
          description: Description of the webhook.
          example: My Webhook
        status:
          type: string
          description: 'Status of the webhook: ''enabled'' or ''disabled''.'
          enum:
            - enabled
            - disabled
        environment:
          type: object
          description: Environment ID this webhook is associated with. Null if global.
        basic_auth:
          type: object
          description: Basic authentication credentials.
          nullable: true
security:
  - Management-API-key: []
